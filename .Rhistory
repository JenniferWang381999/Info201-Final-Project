source("average_means_graph.R")
setwd("~/Documents/GitHub/Info201-Final-Project")
source("average_means_graph.R")
# Define server logic required to draw a histogram
server <- function(input, output) {
avg_means <- read.csv("data/seattle_apt_2015_2019.csv",
stringsAsFactors = FALSE)
# Creates new dataframe where each bedroom size, month, and price is in one
# column. This solution was taken from the first answer in this post:
# https://stackoverflow.com/questions/27382649/a-line-graph-for-each-row
avg_means2 <- melt(
avg_means, id = "Bedroom_Size", na.rm = TRUE, value.name = "price"
)
# Removes the "X" and converts the variable column into dates
avg_means2$variable <- format(
as.Date(avg_means2$variable, format = "X%Y.%d"), "%Y-%d")
output$seattle <- renderPlot({
# How to filter by two standards? one by year, and one by months only? IF year then show t
# the years only and the months then filter the months only?
# Creates a data plot.
ggplot(data = avg_means2,
aes(x = variable, y = price, color = Bedroom_Size), group = 3) +
# Points are placed the prices of housing for each month, separated by the
# Bedroom Size.
geom_point() +
ggtitle("Rental Listing Trend") +
xlab("Year-Month") +
ylab("Price ($)") +
# Turns the x-axis labels to 45 degrees so that it is readable
# This solution was taken from the second answer in this post:
# https://stackoverflow.com/questions/50399838/how-to-alternate-a-new-line
# -for-overlapping-x-axis-labels
theme(axis.text.x  = element_text(angle=45, hjust = 1))
})
output$TEST_Code <- renderText({
paste("This page has the minimally functioning ShinyApp")
})
}
source("average_means_graph.R")
install.packages("reshape2")
shiny::runApp()
install.packages("lubridate")
setwd("~/Documents/GitHub/Info201-Final-Project")
source("average_means_graph.R")
shiny <- shinyUI(navbarPage(theme = shinytheme("cerulean"),
"HOUSING PRICES ANALYSIS",
page_one <- tabPanel(
#Title of the first question
"RENT COMPARISON IN 5 CITIES",
titlePanel("Analysis of Rent Comparison from 2015-2019 in 5 Cities :
Seattle, New York, San Francisco, Boston, Los Angeles"),
sidebarLayout
(
sidebarPanel
(
# Sidebar with a slider input for number of bins
sliderInput("bins",
"Include Years",
min = 2015,
max = 2019,
value = 5
),
# Dropdown List of cities
selectInput(
"date", "View by a Specific City :",
c("Boston", "Los Angeles", "New York", "San Francisco", "Seattle")
)
),
# Plot of the Q1.
mainPanel(
h4("Under Construction :
PLEASE go to Tab 2:
RENT ANALYSIS BY MONTH to see the minimally functioning shinyApp"),
plotOutput("seattle_Rent_2015_2019"),
textOutput("TEST")
)
)
),
page_two <- tabPanel(
"RENT ANALYSIS BY MONTH",
#title of second Tab
titlePanel("Analysis of Rent Comparison from 2015-2019 by Month, in Seattle"),
sidebarLayout(
sidebarPanel(
# Sidebar with a slider input for number of bins
sliderInput("bins",
"Include Years",
min = 2015,
max = 2019,
value = 5
),
# Dropdown List of Months
selectInput(
"date", "View by a Specific Month :",
c("JAN", "FEB", "MAR", "APR", "MAY", "JUN",
"JULY", "AUG", "SEPT", "OCT", "NOV", "DEC")
)
),
mainPanel(
#header text : maybe use verbatim box?
h5("This is a scatterplot chart for rental prices from
January 2015 to October 2019 in Seattle.",
"The chart includes prices for studios, one-bedrooms, two-bedrooms"),
#display the graph
plotOutput("seattle"),
textOutput("TEST_Code"),
)
)
),
page_three <- tabPanel(
"SUMMARY",
#title of Summary Tab
titlePanel("Summary of the Analysis")
),
page_four <- tabPanel(
"Info",
#title of Info tab
titlePanel("About Us")
)
))
shiny::runApp()
install.packages("reshape2")
install.packages("lubridate")
install.packages("reshape2")
install.packages("lubridate")
install.packages("lubridate")
install.packages("lubridate")
library(ggplot2)
p <- ggplot(seattle_value, aes(y = price,x = date, color = Type)) +
geom_line() +
ggtitle("Seattle Rental Value 2015-2019")
setwd("~/Documents/GitHub/Info201-Final-Project")
server <- function(input, output) {
avg_means <- read.csv("data/seattle_apt_2015_2019.csv",
stringsAsFactors = FALSE)
# Creates new dataframe where each bedroom size, month, and price is in one
# column. This solution was taken from the first answer in this post:
# https://stackoverflow.com/questions/27382649/a-line-graph-for-each-row
avg_means2 <- melt(
avg_means, id = "Bedroom_Size", na.rm = TRUE, value.name = "price"
)
# Removes the "X" and converts the variable column into dates
avg_means2$variable <- format(
as.Date(avg_means2$variable, format = "X%Y.%d"), "%Y-%d")
output$seattle <- renderPlot({
# How to filter by two standards? one by year, and one by months only? IF year then show t
# the years only and the months then filter the months only?
# Creates a data plot.
ggplot(data = avg_means2,
aes(x = variable, y = price, color = Bedroom_Size), group = 3) +
# Points are placed the prices of housing for each month, separated by the
# Bedroom Size.
geom_point() +
ggtitle("Rental Listing Trend") +
xlab("Year-Month") +
ylab("Price ($)") +
# Turns the x-axis labels to 45 degrees so that it is readable
# This solution was taken from the second answer in this post:
# https://stackoverflow.com/questions/50399838/how-to-alternate-a-new-line
# -for-overlapping-x-axis-labels
theme(axis.text.x  = element_text(angle=45, hjust = 1))
})
output$TEST_Code <- renderText({
paste("This page has the minimally functioning ShinyApp")
})
}
shiny <- shinyUI(navbarPage(theme = shinytheme("cerulean"),
"HOUSING PRICES ANALYSIS",
page_one <- tabPanel(
#Title of the first question
"RENT COMPARISON IN 5 CITIES",
titlePanel("Analysis of Rent Comparison from 2015-2019 in 5 Cities :
Seattle, New York, San Francisco, Boston, Los Angeles"),
sidebarLayout
(
sidebarPanel
(
# Sidebar with a slider input for number of bins
sliderInput("bins",
"Include Years",
min = 2015,
max = 2019,
value = 5
),
# Dropdown List of cities
selectInput(
"date", "View by a Specific City :",
c("Boston", "Los Angeles", "New York", "San Francisco", "Seattle")
)
),
# Plot of the Q1.
mainPanel(
h4("Under Construction :
PLEASE go to Tab 2:
RENT ANALYSIS BY MONTH to see the minimally functioning shinyApp"),
plotOutput("seattle_Rent_2015_2019"),
textOutput("TEST")
)
)
),
page_two <- tabPanel(
"RENT ANALYSIS BY MONTH",
#title of second Tab
titlePanel("Analysis of Rent Comparison from 2015-2019 by Month, in Seattle"),
sidebarLayout(
sidebarPanel(
# Sidebar with a slider input for number of bins
sliderInput("bins",
"Include Years",
min = 2015,
max = 2019,
value = 5
),
# Dropdown List of Months
selectInput(
"date", "View by a Specific Month :",
c("JAN", "FEB", "MAR", "APR", "MAY", "JUN",
"JULY", "AUG", "SEPT", "OCT", "NOV", "DEC")
)
),
mainPanel(
#header text : maybe use verbatim box?
h5("This is a scatterplot chart for rental prices from
January 2015 to October 2019 in Seattle.",
"The chart includes prices for studios, one-bedrooms, two-bedrooms"),
#display the graph
plotOutput("seattle"),
textOutput("TEST_Code"),
)
)
),
page_three <- tabPanel(
"SUMMARY",
#title of Summary Tab
titlePanel("Summary of the Analysis")
),
page_four <- tabPanel(
"Info",
#title of Info tab
titlePanel("About Us")
)
))
setwd("~/Documents/GitHub/Info201-Final-Project")
source("average_means_graph.R")
source("average_means_graph.R")
shiny <- shinyUI(navbarPage(theme = shinytheme("cerulean"),
"HOUSING PRICES ANALYSIS",
page_one <- tabPanel(
#Title of the first question
"RENT COMPARISON IN 5 CITIES",
titlePanel("Analysis of Rent Comparison from 2015-2019 in 5 Cities :
Seattle, New York, San Francisco, Boston, Los Angeles"),
sidebarLayout
(
sidebarPanel
(
# Sidebar with a slider input for number of bins
sliderInput("bins",
"Include Years",
min = 2015,
max = 2019,
value = 5
),
# Dropdown List of cities
selectInput(
"date", "View by a Specific City :",
c("Boston", "Los Angeles", "New York", "San Francisco", "Seattle")
)
),
# Plot of the Q1.
mainPanel(
h4("Under Construction :
PLEASE go to Tab 2:
RENT ANALYSIS BY MONTH to see the minimally functioning shinyApp"),
plotOutput("seattle_Rent_2015_2019"),
textOutput("TEST")
)
)
),
page_two <- tabPanel(
"RENT ANALYSIS BY MONTH",
#title of second Tab
titlePanel("Analysis of Rent Comparison from 2015-2019 by Month, in Seattle"),
sidebarLayout(
sidebarPanel(
# Sidebar with a slider input for number of bins
sliderInput("bins",
"Include Years",
min = 2015,
max = 2019,
value = 5
),
# Dropdown List of Months
selectInput(
"date", "View by a Specific Month :",
c("JAN", "FEB", "MAR", "APR", "MAY", "JUN",
"JULY", "AUG", "SEPT", "OCT", "NOV", "DEC")
)
),
mainPanel(
#header text : maybe use verbatim box?
h5("This is a scatterplot chart for rental prices from
January 2015 to October 2019 in Seattle.",
"The chart includes prices for studios, one-bedrooms, two-bedrooms"),
#display the graph
plotOutput("seattle"),
textOutput("TEST_Code"),
)
)
),
page_three <- tabPanel(
"SUMMARY",
#title of Summary Tab
titlePanel("Summary of the Analysis")
),
page_four <- tabPanel(
"Info",
#title of Info tab
titlePanel("About Us")
)
))
server <- function(input, output) {
avg_means <- read.csv("data/seattle_apt_2015_2019.csv",
stringsAsFactors = FALSE)
# Creates new dataframe where each bedroom size, month, and price is in one
# column. This solution was taken from the first answer in this post:
# https://stackoverflow.com/questions/27382649/a-line-graph-for-each-row
avg_means2 <- melt(
avg_means, id = "Bedroom_Size", na.rm = TRUE, value.name = "price"
)
# Removes the "X" and converts the variable column into dates
avg_means2$variable <- format(
as.Date(avg_means2$variable, format = "X%Y.%d"), "%Y-%d")
output$seattle <- renderPlot({
# How to filter by two standards? one by year, and one by months only? IF year then show t
# the years only and the months then filter the months only?
# Creates a data plot.
ggplot(data = avg_means2,
aes(x = variable, y = price, color = Bedroom_Size), group = 3) +
# Points are placed the prices of housing for each month, separated by the
# Bedroom Size.
geom_point() +
ggtitle("Rental Listing Trend") +
xlab("Year-Month") +
ylab("Price ($)") +
# Turns the x-axis labels to 45 degrees so that it is readable
# This solution was taken from the second answer in this post:
# https://stackoverflow.com/questions/50399838/how-to-alternate-a-new-line
# -for-overlapping-x-axis-labels
theme(axis.text.x  = element_text(angle=45, hjust = 1))
})
output$TEST_Code <- renderText({
paste("This page has the minimally functioning ShinyApp")
})
}
shiny <- shinyUI(navbarPage(theme = shinytheme("cerulean"),
"HOUSING PRICES ANALYSIS",
page_one <- tabPanel(
#Title of the first question
"RENT COMPARISON IN 5 CITIES",
titlePanel("Analysis of Rent Comparison from 2015-2019 in 5 Cities :
Seattle, New York, San Francisco, Boston, Los Angeles"),
sidebarLayout
(
sidebarPanel
(
# Sidebar with a slider input for number of bins
sliderInput("bins",
"Include Years",
min = 2015,
max = 2019,
value = 5
),
# Dropdown List of cities
selectInput(
"date", "View by a Specific City :",
c("Boston", "Los Angeles", "New York", "San Francisco", "Seattle")
)
),
# Plot of the Q1.
mainPanel(
h4("Under Construction :
PLEASE go to Tab 2:
RENT ANALYSIS BY MONTH to see the minimally functioning shinyApp"),
plotOutput("seattle_Rent_2015_2019"),
textOutput("TEST")
)
)
),
page_two <- tabPanel(
"RENT ANALYSIS BY MONTH",
#title of second Tab
titlePanel("Analysis of Rent Comparison from 2015-2019 by Month, in Seattle"),
sidebarLayout(
sidebarPanel(
# Sidebar with a slider input for number of bins
sliderInput("bins",
"Include Years",
min = 2015,
max = 2019,
value = 5
),
# Dropdown List of Months
selectInput(
"date", "View by a Specific Month :",
c("JAN", "FEB", "MAR", "APR", "MAY", "JUN",
"JULY", "AUG", "SEPT", "OCT", "NOV", "DEC")
)
),
mainPanel(
#header text : maybe use verbatim box?
h5("This is a scatterplot chart for rental prices from
January 2015 to October 2019 in Seattle.",
"The chart includes prices for studios, one-bedrooms, two-bedrooms"),
#display the graph
plotOutput("seattle"),
textOutput("TEST_Code"),
)
)
),
page_three <- tabPanel(
"SUMMARY",
#title of Summary Tab
titlePanel("Summary of the Analysis")
),
page_four <- tabPanel(
"Info",
#title of Info tab
titlePanel("About Us")
)
))
shiny::runApp()
