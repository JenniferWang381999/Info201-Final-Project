filter(Bedroom_Size %in% stu)
View(studio_df)
one_br_df <- five_cities_df %>%
filter(Bedroom_Size %in% one_br)
one_br <- c("1br")
one_br_df <- five_cities_df %>%
filter(Bedroom_Size %in% one_br)
View(one_br)
one_br <- c("1br")
one_br_df <- five_cities_df %>%
filter(Bedroom_Size %in% one_br)
View(one_br_df)
two_br <- c("2br")
two_br_df <- five_cities_df %>%
filter(Bedroom_Size %in% two_br)
View(two_br_df)
# five cities data and graph
install.packages("plotly")
library(plotly)
library(ggplot2)
# install.packages("plotly")
install.packages("reshape2")
library(reshape2)
# Read the csv and store it under the name "avg_means"
avg_means <- read.csv("data/seattle_apt_2015_2019.csv",
stringsAsFactors = FALSE)
# Creates new dataframe where each bedroom size, month, and price is in one
# column. This solution was taken from the first answer in this post:
# https://stackoverflow.com/questions/27382649/a-line-graph-for-each-row
avg_means2 <- melt(
avg_means, id = "Bedroom_Size", na.rm = TRUE, value.name = "price"
)
# Removes the "X" and converts the variable column into dates
avg_means2$variable <- format(
as.Date(avg_means2$variable, format = "X%Y.%d"), "%Y-%d")
# Return the first and last part of objects in the avg_means2 dataframe.
head(avg_means2)
# Creates a data plot.
ggplot() +
# Points are placed the prices of housing for each month, separated by the
# Bedroom Size.
geom_point(data = avg_means2,
aes(x = variable, y = price, color = Bedroom_Size), group = 3
) +
# Turns the x-axis labels to 45 degrees so that it is readable
# This solution was taken from the second answer in this post:
# https://stackoverflow.com/questions/50399838/how-to-alternate-a-new-line
# -for-overlapping-x-axis-labels
theme(axis.text.x  = element_text(angle=45, hjust = 1))
View(avg_means)
year = c("2015", "2016", "2017", "2018", "2019")
test <- read.table(text = studio_df, header = TRUE)
test2 <- melt(test, id="Location",  na.rm = TRUE, value.name = "price")
ggplot() +
geom_point(data = test, aes(x = year, y = price, color = Location), group = 5) +
# Turns the x-axis labels to 45 degrees so that it is readable
# This solution was taken from the second answer in this post:
# https://stackoverflow.com/questions/50399838/how-to-alternate-a-new-line
# -for-overlapping-x-axis-labels
theme(axis.text.x  = element_text(angle=45, hjust = 1))
year = c("2015", "2016", "2017", "2018", "2019")
test <- read.table(text = studio_df, header = TRUE)
test2 <- melt(test, id="Location",  na.rm = TRUE, value.name = "price")
year = c("2015", "2016", "2017", "2018", "2019")
test <- read.table(text = studio_df, header = TRUE)
test <- read.table(studio_df, header = TRUE)
test <- read.table(data = studio_df, header = TRUE)
test2 <- melt(studio_df, id="Location",  na.rm = TRUE, value.name = "price")
ggplot() +
geom_point(data = test2, aes(x = year, y = price, color = Location), group = 5) +
# Turns the x-axis labels to 45 degrees so that it is readable
# This solution was taken from the second answer in this post:
# https://stackoverflow.com/questions/50399838/how-to-alternate-a-new-line
# -for-overlapping-x-axis-labels
theme(axis.text.x  = element_text(angle=45, hjust = 1))
ggplot() +
geom_point(data = test2, aes(x = year, y = price, color = Location), group = 5)
head(test2)
ggplot() +
geom_point(data = test2, aes(x = year, y = price, color = Location), group = 5)
ggplot() +
geom_point(data = test2, aes(x = year, y = price, color = Location), group = 5) +
# Turns the x-axis labels to 45 degrees so that it is readable
# This solution was taken from the second answer in this post:
# https://stackoverflow.com/questions/50399838/how-to-alternate-a-new-line
# -for-overlapping-x-axis-labels
theme(axis.text.x  = element_text(angle=45, hjust = 1))
View(test2)
p <- qplot(
data = df,
x = Mean.Temp.Jan,
y = Mean.Temp.July,
color = factor(Natural.Amenity.Rank),
alpha = 0.25,
geom = c("point", "smooth")
)
ggplot(data = studio_df, mapping = aes(x = year, y = price, color = Location)) +
geom_line() +
facet_wrap(facets = vars(genus))
ggplot(data = studio_df, mapping = aes(x = year, y = price, color = Location)) +
geom_line()
price = studio_df$[1:5, 1:5]
price = [1:5, 1:5]
price = (1:5, 1:5)
price = ([1:5, 1:5])
ggplot(data = studio_df, mapping = aes(x = year, y = studio_df$year, color = Location)) +
geom_line()
year = c("2015", "2016", "2017", "2018", "2019")
ggplot(data = studio_df, mapping = aes(x = year, y = studio_df$year, color = Location)) +
geom_line()
year = c("2015", "2016", "2017", "2018", "2019")
price = c("1000", "1500", "2000", "2500", "3000")
ggplot(data = studio_df, mapping = aes(x = year, y = price, color = Location)) +
geom_line()
ggplot(data = studio_df, mapping = aes(x = year, y = price, color = Location), group = 5) +
geom_line()
year = c("2015", "2016", "2017", "2018", "2019")
price = studio_df$year
View(price)
stu <- c("Studio")
studio_df <- five_cities_df %>%
filter(Bedroom_Size %in% stu)
price
price = studio_df$2015
price = studio_df$`2015`
price
price = studio_df$`2015`, studio_df$`2016`
price = studio_df$`2015`, `2016`
price = studio_df$`2015` && `2016`
y = c('2015', '2016')
price = studio_df$y
price
year = c("2015", "2016", "2017", "2018", "2019")
price <- studio_df %>%
select(year)
price
ggplot(data = studio_df, mapping = aes(x = year, y = price, color = Location), group = 5) +
geom_line()
price <- studio_df %>%
select("2015")
ggplot(data = studio_df, mapping = aes(x = year, y = price, color = Location), group = 5) +
geom_line()
year <- studio_df %>%
select(.[, 5:9])
year <- studio_df$[1, 5:9]
year <- studio_df$[[1, 5:9]]
year <- studio_df %>%
select(starts_with("201"))
year
year <- studio_df %>%
filter(starts_with("201"))
year <- studio_df %>%
select(starts_with("201")) %>%
top_n(1)
year
year = c("2015", "2016", "2017", "2018", "2019")
price <- studio_df %>%
select(starts_with("201")) %>%
summarise_all()
price <- studio_df %>%
select(starts_with("201")) %>%
summarise_all()
price <- studio_df %>%
select(starts_with("201")) %>%
summarise()
View(price)
price <- studio_df %>%
select(starts_with("201")) %>%
top_n(5)
View(price)
year = c("2015", "2016", "2017", "2018", "2019")
price <- studio_df %>%
select(starts_with("201")) %>%
top_n(5)
ggplot(data = studio_df, mapping = aes(x = year, y = price, color = Location), group = 5) +
geom_line()
ggplot(data = studio_df, mapping = aes(x = year, y = 'New York, NY')) +
geom_line()
price = c("1000", "1500", "2000", "2500")
ggplot(data = studio_df, mapping = aes(x = year, y = price)) +
geom_line()
ggplot(data = studio_df, mapping = aes(x = year, y = price, color = Location), group = 5) +
geom_line()
price = c("1000", "1500", "2000", "2500")
ggplot(data = studio_df, mapping = aes(x = year, y = price, color = Location), group = 5) +
geom_line()
year = c("2015", "2016", "2017", "2018", "2019")
price = c("1000", "1500", "2000", "2500")
ggplot(data = studio_df, mapping = aes(x = year, y = price, color = Location), group = 5) +
geom_line()
price = c("1000", "1250", "1500", "1750", "2000", "2250")
ggplot(data = studio_df, mapping = aes(x = year, y = price, color = Location), group = 5) +
geom_line()
year = c("2015", "2016", "2017", "2018", "2019")
price = c("1000", "1250", "1500", "1750", "2000")
ggplot(data = studio_df, mapping = aes(x = year, y = price, color = Location), group = 5) +
geom_line()
year = c("2015", "2016", "2017", "2018", "2019")
price = c("1000", "1250", "1500", "1750", "2000", "2500")
ggplot(data = studio_df, mapping = aes(x = year, y = price, color = Location), group = 5) +
geom_line()
year = c("2015", "2016", "2017", "2018", "2019")
price = c("1000", "1250", "1500", "1750", "2000")
ggplot(data = studio_df, mapping = aes(x = year, y = price, color = Location), group = 5) +
geom_line()
no_need <- c("Location_Type", "State", "Bedroom_Size")
stu <- c("Studio")
no_need <- c("Location_Type", "State", "Bedroom_Size")
studio_df <- five_cities_df %>%
filter(Bedroom_Size %in% stu) %>%
select(-no_need)
View(studio_df)
test <- melt(
studio_df, id = "Location", na.rm = TRUE, value.name = "price"
)
test$variable <- format(
as.Date(test$variable, format = "%Y")
)
head(test)
test$variable <- format(
as.Date(test$variable, format = "%Y"), "%Y"
)
head(test)
ggplot() +
# Points are placed the prices of housing for each month, separated by the
# Bedroom Size.
geom_point(data = test,
aes(x = variable, y = price, color = Location), group = 5
) +
# Turns the x-axis labels to 45 degrees so that it is readable
# This solution was taken from the second answer in this post:
# https://stackoverflow.com/questions/50399838/how-to-alternate-a-new-line
# -for-overlapping-x-axis-labels
theme(axis.text.x  = element_text(angle=45, hjust = 1))
ggplot() +
# Points are placed the prices of housing for each month, separated by the
# Bedroom Size.
geom_line(data = test,
aes(x = variable, y = price, color = Location), group = 5
) +
# Turns the x-axis labels to 45 degrees so that it is readable
# This solution was taken from the second answer in this post:
# https://stackoverflow.com/questions/50399838/how-to-alternate-a-new-line
# -for-overlapping-x-axis-labels
theme(axis.text.x  = element_text(angle=45, hjust = 1))
ggplot() +
# Points are placed the prices of housing for each month, separated by the
# Bedroom Size.
geom_line(data = test,
aes(x = variable, y = price, color = Location), group = 5
)
ggplot() +
# Points are placed the prices of housing for each month, separated by the
# Bedroom Size.
geom_point(data = test,
aes(x = variable, y = price, color = Location), group = 5
)
ggplot(data = test,
aes(x = variable, y = price, color = Location), group = 5) +
geom_line()
ggplot() +
# Points are placed the prices of housing for each month, separated by the
# Bedroom Size.
geom_point(data = test,
aes(x = variable, y = price, color = Location), group = 5
)
ggplot() +
# Points are placed the prices of housing for each month, separated by the
# Bedroom Size.
geom_line(data = test,
aes(x = variable, y = price, color = Location), group = 5
)
ny_stu <- studio_df %>%
filter(Location == "New York, NY")
View(ny_stu)
la_stu <- studio_df %>%
filter(Location == "Los Angeles, CA")
View(la_stu)
sf_stu <- studio_df %>%
filter(Location == "San Francisco, CA")
bo_stu <- studio_df %>%
filter(Location == "Boston, MA")
sea_stu <- studio_df %>%
filter(Location == "Seattle, WA")
test <- melt(
ny_stu, id = "Location", na.rm = TRUE, value.name = "price"
)
test$variable <- format(
as.Date(test$variable, format = "%Y"), "%Y"
)
head(test)
est1 <- ggplot() +
geom_line(data = ny_stu, aes(x = variable, y = price, color = Location))
test1
ggplot() +
geom_line(data = ny_stu, aes(x = variable, y = price, color = Location))
test <- melt(
ny_stu, id = "Location", na.rm = TRUE, value.name = "price"
)
test$variable <- format(
as.Date(test$variable, format = "%Y"), "%Y"
)
head(test)
ggplot() +
geom_line(data = ny_stu, aes(x = variable, y = price, color = Location))
test$variable <- format(
as.Date(test$variable, format = "%Y"), "%Y"
)
ggplot() +
geom_line(data = ny_stu, aes(x = variable, y = price, color = Location))
head(test)
test <- melt(
ny_stu, id = "Location", na.rm = TRUE, value.name = "price"
)
test$variable <- format(
as.Date(test$variable, format = "%Y"), "%Y"
)
head(test)
ggplot() +
geom_line(data = ny_stu, aes(x = variable, y = price, color = Location))
ggplot() +
geom_point(data = ny_stu, aes(x = variable, y = price, color = Location))
test$year <- format(
as.Date(test$year, format = "%Y"), "%Y"
)
test$variable <- format(
as.Date(test$year, format = "%Y"), "%Y"
)
test$variable <- format(
as.Date(test$variable, format = "%Y"), "%Y"
)
test$y <- format(
as.Date(test$y, format = "%Y"), "%Y"
)
test$variable <- format(
as.Date(test$variable, format = "%Y"), "%Y"
)
head(test)
ggplot() +
geom_point(data = ny_stu, aes(x = variable, y = price, color = Location))
ggplot() +
geom_point(data = test, aes(x = variable, y = price, color = Location)
ggplot() +
geom_point(data = test, aes(x = variable, y = price, color = Location)
ggplot() +
geom_point(data = test, aes(x = variable, y = price, color = Location))
ggplot() +
geom_point(data = test, aes(x = variable, y = price))
ggplot() +
geom_line(data = test, aes(x = variable, y = price))
ggplot() +
geom_line(data = test, aes(x = variable, y = price))
ggplot() +
geom_line(data = test, aes(x = variable, y = price, color = "NY"))
ggplot(data = test, aes(x = variable, y = price)) +
geom_line()
ggplot(test, aes(variable, price, group = 1)) +
geom_point() +
geom_line() +
labs(x = "Year", Y = "Price", title = "testt")
test <- melt(
studio_df, id = "Location", na.rm = TRUE, value.name = "price"
)
test$variable <- format(
as.Date(test$variable, format = "%Y"), "%Y"
)
head(test)
ggplot(test, aes(variable, price, group = 5)) +
geom_point() +
geom_line() +
labs(x = "Year", Y = "Price", title = "testt")
test <- melt(
ny_stu, id = "Location", na.rm = TRUE, value.name = "price"
)
test$variable <- format(
as.Date(test$variable, format = "%Y"), "%Y"
)
head(test)
ggplot(test, aes(variable, price, group = 1)) +
geom_point() +
geom_line() +
labs(x = "Year", Y = "Price", title = "testt")
test <- melt(
ny_stu, id = "Location", na.rm = TRUE, value.name = "price"
)
test$variable <- format(
as.Date(test$variable, format = "%Y"), "%Y"
)
head(test)
ggplot(test, aes(variable, Location, group = 1)) +
geom_point() +
geom_line() +
labs(x = "Year", Y = "Price", title = "testt")
test <- melt(
ny_stu, id = "Location", na.rm = TRUE, value.name = "price"
)
test$variable <- format(
as.Date(test$variable, format = "%Y"), "%Y"
)
head(test)
ggplot(test, aes(variable, price, group = 1)) +
geom_point() +
geom_line() +
labs(x = "Year", Y = "Price", title = "testt")
library(reshape2)
ggplot(test, aes(variable, price, group = Location)) +
geom_point() +
geom_line() +
labs(x = "Year", Y = "Price", title = "testt")
test <- melt(
studio_df, id = "Location", na.rm = TRUE, value.name = "price"
)
test$variable <- format(
as.Date(test$variable, format = "%Y"), "%Y"
)
head(test)
ggplot(test, aes(variable, price, group = Location)) +
geom_point() +
geom_line() +
labs(x = "Year", Y = "Price", title = "testt")
ggplot(test, aes(variable, price, group = Location, color = Location)) +
geom_point() +
geom_line() +
labs(x = "Year", Y = "Price", title = "testt")
test <- melt(
studio_df, id = "Location", na.rm = TRUE, value.name = "price"
)
test$variable <- format(
as.Date(test$variable, format = "%Y"), "%Y"
)
head(test)
ggplot(test, aes(variable, price, group = Location, color = Location)) +
geom_point() +
geom_line() +
labs(x = "Year", Y = "Price", title = "Studio Price by years and cities")
one_br <- c("1br")
one_br_df <- five_cities_df %>%
filter(Bedroom_Size %in% one_br) %>%
select(-no_need)
# 2br dataframe
two_br <- c("2br")
two_br_df <- five_cities_df %>%
filter(Bedroom_Size %in% two_br) %>%
select(-no_need)
stu_avg <- melt(
studio_df, id = "Location", na.rm = TRUE, value.name = "price"
)
stu_avg$variable <- format(
as.Date(stu_avg$variable, format = "%Y"), "%Y"
)
head(stu_avg)
ggplot(stu_avg, aes(variable, price, group = Location, color = Location)) +
geom_point() +
geom_line() +
labs(x = "Year", Y = "Price", title = "Studio Price by years and cities")
onebr_avg <- melt(
one_br_df, id = "Location", na.rm = TRUE, value.name = "price"
)
onebr_avg$variable <- format(
as.Date(onebr_avg$variable, format = "%Y"), "%Y"
)
head(onebr_avg)
ggplot(onebr_avg, aes(variable, price, group = Location, color = Location)) +
geom_point() +
geom_line() +
labs(x = "Year", Y = "Price", title = "One Bedroom Price by years and cities")
twobr_avg <- melt(
two_br_df, id = "Location", na.rm = TRUE, value.name = "price"
)
onebr_avg$variable <- format(
as.Date(twobr_avg$variable, format = "%Y"), "%Y"
)
head(twobr_avg)
ggplot(twobr_avg, aes(variable, price, group = Location, color = Location)) +
geom_point() +
geom_line() +
labs(x = "Year", Y = "Price", title = "Two Bedrooms Price by years and cities")
stu_avg <- melt(
studio_df, id = "Location", na.rm = TRUE, value.name = "price"
)
stu_avg$variable <- format(
as.Date(stu_avg$variable, format = "%Y"), "%Y"
)
head(stu_avg)
ggplot(stu_avg, aes(variable, price, group = Location, color = Location)) +
geom_point() +
geom_line() +
labs(x = "Year", Y = "Price", title = "Studio Price by year and cities")
# one bed graph
onebr_avg <- melt(
one_br_df, id = "Location", na.rm = TRUE, value.name = "price"
)
onebr_avg$variable <- format(
as.Date(onebr_avg$variable, format = "%Y"), "%Y"
)
head(onebr_avg)
ggplot(onebr_avg, aes(variable, price, group = Location, color = Location)) +
geom_point() +
geom_line() +
labs(x = "Year", Y = "Price", title = "One Bedroom Price by year and cities")
# two bed graph
twobr_avg <- melt(
two_br_df, id = "Location", na.rm = TRUE, value.name = "price"
)
onebr_avg$variable <- format(
as.Date(twobr_avg$variable, format = "%Y"), "%Y"
)
head(twobr_avg)
ggplot(twobr_avg, aes(variable, price, group = Location, color = Location)) +
geom_point() +
geom_line() +
labs(x = "Year", Y = "Price", title = "Two Bedrooms Price by year and cities")
